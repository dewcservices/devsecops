name: Python CI Pipeline

on: [push, pull_request]

env:
  DOCKER_IMAGE_NAME: ""
  SONAR_ORGANIZATION: ""
  SONAR_PROJECT_KEY: ""
  PYTHON_APP_SOURCE_DIR: ""
  PYTEST_COVERAGE_XML_FILE_NAME: "coverage-reports/coverage-pytest.xml"
  PYTEST_COVERAGE_THRESHOLD_PERCENT: 50

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Validate conventional commits
      uses: wagoid/commitlint-github-action@v6

    - name: Run Custom Python uv CI action
      uses: ./.github/actions/python-uv/
      with: 
        pytest_coverage_xml_file_name: ${{ env.PYTEST_COVERAGE_XML_FILE_NAME }}
        source_dir: ${{ env.PYTHON_APP_SOURCE_DIR }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        gitleaks_token: ${{ secrets.GITLEAKS_TOKEN }}
        sonar_token: ${{ secrets.SONAR_TOKEN }}
        sonar_args: >
          -D sonar.organization=${{ env.SONAR_ORGANIZATION }}
          -D sonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
          -D sonar.exclusions=${{ env.PYTHON_APP_SOURCE_DIR }}/.venv/**
          -D sonar.python.coverage.reportPaths=${{ env.PYTEST_COVERAGE_XML_FILE_NAME }}
          -D sonar.sources=${{ env.PYTHON_APP_SOURCE_DIR }}
        dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
        dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
        build_context: ${{ env.PYTHON_APP_SOURCE_DIR }}
        docker_image_name: ${{ env.DOCKER_IMAGE_NAME }}
        pytest_coverage_threshold_percent: ${{ env.PYTEST_COVERAGE_THRESHOLD_PERCENT }}